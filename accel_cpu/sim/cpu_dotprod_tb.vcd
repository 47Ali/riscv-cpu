$date
	Tue Jul  1 01:55:33 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cpu_dotprod_tb $end
$var wire 32 ! instr_count [31:0] $end
$var wire 32 " mem_read_count [31:0] $end
$var wire 32 # mem_write_count [31:0] $end
$var wire 32 $ rf_read_count [31:0] $end
$var wire 32 % rf_write_count [31:0] $end
$var wire 32 & cycle_count [31:0] $end
$var reg 1 ' clk $end
$var reg 1 ( reset $end
$scope module uut $end
$var wire 1 ) branch_taken $end
$var wire 1 ' clk $end
$var wire 1 * jal $end
$var wire 1 + jalr $end
$var wire 32 , jalr_target [31:0] $end
$var wire 1 ( reset $end
$var wire 1 - zero $end
$var wire 32 . write_back_data [31:0] $end
$var wire 1 / sltu $end
$var wire 1 0 slt $end
$var wire 5 1 rs2 [4:0] $end
$var wire 5 2 rs1 [4:0] $end
$var wire 32 3 rd2 [31:0] $end
$var wire 32 4 rd1 [31:0] $end
$var wire 5 5 rd [4:0] $end
$var wire 32 6 pc_plus4 [31:0] $end
$var wire 32 7 pc_out [31:0] $end
$var wire 7 8 opcode [6:0] $end
$var wire 32 9 mem_data [31:0] $end
$var wire 32 : instr [31:0] $end
$var wire 32 ; imm [31:0] $end
$var wire 1 < halt $end
$var wire 7 = funct7 [6:0] $end
$var wire 3 > funct3 [2:0] $end
$var wire 1 ? eq $end
$var wire 32 @ branch_target [31:0] $end
$var wire 32 A alu_result [31:0] $end
$var wire 1 B alu_ctrl_relu $end
$var wire 1 C alu_ctrl_matmul $end
$var wire 1 D alu_ctrl_dotprod $end
$var wire 1 E RegWrite $end
$var wire 1 F MemWrite $end
$var wire 1 G MemRead $end
$var wire 1 H Jump $end
$var wire 1 I Branch $end
$var wire 1 J ALUSrc $end
$var wire 2 K ALUOp [1:0] $end
$var parameter 160 L MEMFILE $end
$var reg 1 M branch_cond $end
$var reg 32 N cycle_count [31:0] $end
$var reg 32 O instr_count [31:0] $end
$var reg 32 P mem_read_count [31:0] $end
$var reg 32 Q mem_write_count [31:0] $end
$var reg 32 R rf_read_count [31:0] $end
$var reg 32 S rf_write_count [31:0] $end
$scope module cu $end
$var wire 1 D alu_ctrl_dotprod $end
$var wire 1 C alu_ctrl_matmul $end
$var wire 1 B alu_ctrl_relu $end
$var wire 3 T funct3 [2:0] $end
$var wire 7 U funct7 [6:0] $end
$var wire 7 V opcode [6:0] $end
$var wire 1 W is_custom0 $end
$var reg 2 X ALUOp [1:0] $end
$var reg 1 J ALUSrc $end
$var reg 1 I Branch $end
$var reg 1 H Jump $end
$var reg 1 G MemRead $end
$var reg 1 F MemWrite $end
$var reg 1 E RegWrite $end
$upscope $end
$scope module dmem $end
$var wire 1 ' clk $end
$var wire 1 G mem_read $end
$var wire 1 F mem_write $end
$var wire 32 Y write_data [31:0] $end
$var wire 32 Z read_data [31:0] $end
$var wire 32 [ addr [31:0] $end
$upscope $end
$scope module exec_unit $end
$var wire 1 D alu_ctrl_dotprod $end
$var wire 1 C alu_ctrl_matmul $end
$var wire 1 B alu_ctrl_relu $end
$var wire 2 \ alu_op [1:0] $end
$var wire 1 J alu_src $end
$var wire 1 ' clk $end
$var wire 3 ] funct3 [2:0] $end
$var wire 7 ^ funct7 [6:0] $end
$var wire 5 _ rd [4:0] $end
$var wire 1 ( reset $end
$var wire 5 ` rs1 [4:0] $end
$var wire 5 a rs2 [4:0] $end
$var wire 32 b wb_data [31:0] $end
$var wire 1 E we $end
$var wire 1 - zero $end
$var wire 32 c rd2 [31:0] $end
$var wire 32 d rd1 [31:0] $end
$var wire 32 e op2 [31:0] $end
$var wire 32 f instr [31:0] $end
$var wire 32 g imm [31:0] $end
$var wire 32 h alu_result [31:0] $end
$var wire 4 i alu_control [3:0] $end
$scope module alu_core $end
$var wire 1 D alu_ctrl_dotprod $end
$var wire 1 C alu_ctrl_matmul $end
$var wire 1 B alu_ctrl_relu $end
$var wire 32 j b [31:0] $end
$var wire 32 k matmul_out [31:0] $end
$var wire 1 - zero $end
$var wire 32 l relu_out [31:0] $end
$var wire 32 m dot_out [31:0] $end
$var wire 16 n dd [15:0] $end
$var wire 16 o cc [15:0] $end
$var wire 16 p bb [15:0] $end
$var wire 4 q alu_control [3:0] $end
$var wire 16 r aa [15:0] $end
$var wire 32 s a [31:0] $end
$var reg 32 t result [31:0] $end
$upscope $end
$scope module alu_ctl $end
$var wire 2 u ALUOp [1:0] $end
$var wire 3 v funct3 [2:0] $end
$var wire 7 w funct7 [6:0] $end
$var reg 4 x alu_control [3:0] $end
$upscope $end
$scope module imm_generator $end
$var wire 32 y instr [31:0] $end
$var reg 32 z imm_out [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ' clk $end
$var wire 5 { rd [4:0] $end
$var wire 1 ( reset $end
$var wire 5 | rs1 [4:0] $end
$var wire 5 } rs2 [4:0] $end
$var wire 32 ~ wd [31:0] $end
$var wire 1 E we $end
$var wire 32 !" rd2 [31:0] $end
$var wire 32 "" rd1 [31:0] $end
$var integer 32 #" i [31:0] $end
$upscope $end
$upscope $end
$scope module fetch_unit $end
$var wire 1 I branch $end
$var wire 1 ) branch_taken $end
$var wire 32 $" branch_target [31:0] $end
$var wire 1 ' clk $end
$var wire 1 * jal $end
$var wire 1 + jalr $end
$var wire 32 %" jalr_target [31:0] $end
$var wire 1 ( reset $end
$var wire 32 &" pc_plus4 [31:0] $end
$var wire 32 '" pc_out [31:0] $end
$var wire 32 (" next_pc [31:0] $end
$var wire 32 )" instr [31:0] $end
$var parameter 160 *" MEMFILE $end
$scope module imem $end
$var wire 32 +" instr [31:0] $end
$var wire 32 ," addr [31:0] $end
$var parameter 160 -" INIT_FILE $end
$upscope $end
$scope module pc_inst $end
$var wire 1 ' clk $end
$var wire 32 ." next_pc [31:0] $end
$var wire 1 ( reset $end
$var reg 32 /" pc_out [31:0] $end
$upscope $end
$upscope $end
$scope module imm_unit $end
$var wire 32 0" instr [31:0] $end
$var reg 32 1" imm_out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111010001100101011100110111010001011111011011010110010101101101001011110110010001101111011101000111000001110010011011110110010000101110011011010110010101101101 -"
b111010001100101011100110111010001011111011011010110010101101101001011110110010001101111011101000111000001110010011011110110010000101110011011010110010101101101 *"
b111010001100101011100110111010001011111011011010110010101101101001011110110010001101111011101000111000001110010011011110110010000101110011011010110010101101101 L
$end
#0
$dumpvars
b10 1"
b1000000000001010010011 0"
b0 /"
b100 ."
b0 ,"
b1000000000001010010011 +"
b1000000000001010010011 )"
b100 ("
b0 '"
b100 &"
b10 %"
b10 $"
bx #"
b0 ""
bx !"
b10 ~
b10 }
b0 |
b101 {
b10 z
b1000000000001010010011 y
b10 x
b0 w
b0 v
b11 u
b10 t
b0 s
b0 r
b10 q
b0 p
b10 o
b0 n
b0 m
b0 l
b0 k
b10 j
b10 i
b10 h
b10 g
b1000000000001010010011 f
b10 e
b0 d
bx c
b10 b
b10 a
b0 `
b101 _
b0 ^
b0 ]
b11 \
b10 [
b0 Z
bx Y
b11 X
0W
b10011 V
b0 U
b0 T
bx S
bx R
bx Q
bx P
bx O
bx N
xM
b11 K
1J
0I
0H
0G
0F
1E
0D
0C
0B
b10 A
b10 @
x?
b0 >
b0 =
0<
b10 ;
b1000000000001010010011 :
b0 9
b10011 8
b0 7
b100 6
b101 5
b0 4
bx 3
b0 2
b10 1
x0
x/
b10 .
0-
b10 ,
0+
0*
0)
1(
0'
bx &
bx %
bx $
bx #
bx "
bx !
$end
#5000
1M
0/
00
1?
b0 3
b0 Y
b0 c
b0 !"
b0 %
b0 S
b0 $
b0 R
b0 #
b0 Q
b0 "
b0 P
b0 !
b0 O
b0 &
b0 N
b100000 #"
1'
#10000
0'
#15000
0(
b100000 #"
1'
#20000
0'
#25000
b11 .
b11 b
b11 ~
b11 A
b11 [
b11 h
b11 t
b11 o
b11 e
b11 j
b1000 ("
b1000 ."
b11 1
b11 a
b11 }
b110 5
b110 _
b110 {
b11 ;
b11 1"
b11 g
b11 z
b1100000000001100010011 :
b1100000000001100010011 f
b1100000000001100010011 y
b1100000000001100010011 )"
b1100000000001100010011 +"
b1100000000001100010011 0"
b1 %
b1 S
b1 !
b1 O
b1 &
b1 N
b1000 &"
b111 @
b111 $"
b1000 6
b100 7
b100 '"
b100 ,"
b100 /"
1'
#30000
0'
#35000
b110000000000000000 .
b110000000000000000 b
b110000000000000000 ~
b110000 k
b110000 m
b11 r
b11 l
b110000000000000000 A
b110000000000000000 [
b110000000000000000 h
b110000000000000000 t
b10000 o
0?
b11 4
b11 d
b11 s
b11 ""
b100 i
b100 q
b100 x
1M
b10000 e
b10000 j
b10010 ,
b10010 %"
b1100 ("
b1100 ."
b10000 1
b10000 a
b10000 }
b110 2
b110 `
b110 |
b1 >
b1 T
b1 ]
b1 v
b10000 g
b10000 z
b10000 ;
b10000 1"
b1000000110001001100010011 :
b1000000110001001100010011 f
b1000000110001001100010011 y
b1000000110001001100010011 )"
b1000000110001001100010011 +"
b1000000110001001100010011 0"
b10 %
b10 S
b10 !
b10 O
b10 &
b10 N
b1100 &"
b11000 @
b11000 $"
b1100 6
b1000 7
b1000 '"
b1000 ,"
b1000 /"
1'
#40000
0'
#45000
b11 n
b110000000000000010 .
b110000000000000010 b
b110000000000000010 ~
b0 o
1/
10
b110000000000000000 3
b110000000000000000 Y
b110000000000000000 c
b110000000000000000 !"
b1 i
b1 q
b1 x
1M
0J
1E
b10 K
b10 X
b10 \
b10 u
b110000000000000000 e
b110000000000000000 j
b10000 ("
b10000 ."
b0 p
b0 k
b0 m
b10 r
b10 l
b10 ,
b10 %"
0-
b110000000000000010 A
b110000000000000010 [
b110000000000000010 h
b110000000000000010 t
b110 1
b110 a
b110 }
b101 2
b101 `
b101 |
b101 5
b101 _
b101 {
b110 >
b110 T
b110 ]
b110 v
b110011 8
b110011 V
b0 ;
b0 1"
b0 g
b0 z
b10 4
b10 d
b10 s
b10 ""
b11000101110001010110011 :
b11000101110001010110011 f
b11000101110001010110011 y
b11000101110001010110011 )"
b11000101110001010110011 +"
b11000101110001010110011 0"
b11 %
b11 S
b1 $
b1 R
b11 !
b11 O
b11 &
b11 N
b10000 &"
b1100 @
b1100 $"
b10000 6
b1100 7
b1100 '"
b1100 ,"
b1100 /"
1'
#50000
0'
#55000
b100 .
b100 b
b100 ~
b100 o
b0 n
b0 r
b100 e
b100 j
b100 A
b100 [
b100 h
b100 t
1?
b0 3
b0 Y
b0 c
b0 !"
b10 i
b10 q
b10 x
1J
1E
b11 K
b11 X
b11 \
b11 u
b10100 ("
b10100 ."
b0 k
b0 m
b0 p
b0 l
1M
b100 ,
b100 %"
b100 1
b100 a
b100 }
b0 2
b0 `
b0 |
b110 5
b110 _
b110 {
b0 >
b0 T
b0 ]
b0 v
b10011 8
b10011 V
b100 g
b100 z
b100 ;
b100 1"
0/
00
b0 4
b0 d
b0 s
b0 ""
b10000000000001100010011 :
b10000000000001100010011 f
b10000000000001100010011 y
b10000000000001100010011 )"
b10000000000001100010011 +"
b10000000000001100010011 0"
b100 %
b100 S
b10 $
b10 R
b100 !
b100 O
b100 &
b100 N
b10100 &"
b10100 @
b10100 $"
b10100 6
b10000 7
b10000 '"
b10000 ,"
b10000 /"
1'
#60000
0'
#65000
b101 .
b101 b
b101 ~
0M
b101 A
b101 [
b101 h
b101 t
b101 o
1/
10
0?
b110000000000000010 3
b110000000000000010 Y
b110000000000000010 c
b110000000000000010 !"
b101 e
b101 j
b11000 ("
b11000 ."
b101 1
b101 a
b101 }
b111 5
b111 _
b111 {
b101 ;
b101 1"
b101 g
b101 z
b10100000000001110010011 :
b10100000000001110010011 f
b10100000000001110010011 y
b10100000000001110010011 )"
b10100000000001110010011 +"
b10100000000001110010011 0"
b101 %
b101 S
b101 !
b101 O
b101 &
b101 N
b11000 &"
b11001 @
b11001 $"
b11000 6
b10100 7
b10100 '"
b10100 ,"
b10100 /"
1'
#70000
0'
#75000
b1010000000000000000 .
b1010000000000000000 b
b1010000000000000000 ~
b1010000 k
b1010000 m
b101 r
b101 l
b1010000000000000000 A
b1010000000000000000 [
b1010000000000000000 h
b1010000000000000000 t
b10000 o
0/
00
b0 3
b0 Y
b0 c
b0 !"
b101 4
b101 d
b101 s
b101 ""
b100 i
b100 q
b100 x
1M
b10000 e
b10000 j
b10100 ,
b10100 %"
b11100 ("
b11100 ."
b10000 1
b10000 a
b10000 }
b111 2
b111 `
b111 |
b1 >
b1 T
b1 ]
b1 v
b10000 g
b10000 z
b10000 ;
b10000 1"
b1000000111001001110010011 :
b1000000111001001110010011 f
b1000000111001001110010011 y
b1000000111001001110010011 )"
b1000000111001001110010011 +"
b1000000111001001110010011 0"
b110 %
b110 S
b110 !
b110 O
b110 &
b110 N
b11100 &"
b101000 @
b101000 $"
b11100 6
b11000 7
b11000 '"
b11000 ,"
b11000 /"
1'
#80000
0'
#85000
b101 n
b1010000000000000100 .
b1010000000000000100 b
b1010000000000000100 ~
b0 o
1/
10
b1010000000000000000 3
b1010000000000000000 Y
b1010000000000000000 c
b1010000000000000000 !"
b1 i
b1 q
b1 x
1M
0J
1E
b10 K
b10 X
b10 \
b10 u
b1010000000000000000 e
b1010000000000000000 j
b100000 ("
b100000 ."
b0 p
b0 k
b0 m
b100 r
b100 l
b100 ,
b100 %"
0-
b1010000000000000100 A
b1010000000000000100 [
b1010000000000000100 h
b1010000000000000100 t
b111 1
b111 a
b111 }
b110 2
b110 `
b110 |
b110 5
b110 _
b110 {
b110 >
b110 T
b110 ]
b110 v
b110011 8
b110011 V
b0 ;
b0 1"
b0 g
b0 z
b100 4
b100 d
b100 s
b100 ""
b11100110110001100110011 :
b11100110110001100110011 f
b11100110110001100110011 y
b11100110110001100110011 )"
b11100110110001100110011 +"
b11100110110001100110011 0"
b111 %
b111 S
b11 $
b11 R
b111 !
b111 O
b111 &
b111 N
b100000 &"
b11100 @
b11100 $"
b100000 6
b11100 7
b11100 '"
b11100 ,"
b11100 /"
1'
#90000
0'
#95000
b10111 .
b10111 b
b10111 ~
b100 o
b1010000000000000100 e
b1010000000000000100 j
b10 r
b10111 A
b10111 [
b10111 h
b10111 t
b1010000000000000100 3
b1010000000000000100 Y
b1010000000000000100 c
b1010000000000000100 !"
b111 i
b111 q
b111 x
1E
b10 K
b10 X
b10 \
b10 u
1D
b100100 ("
b100100 ."
b10111 k
b10111 m
b11 p
b110000000000000010 l
0M
b110000000000000010 ,
b110000000000000010 %"
b110 1
b110 a
b110 }
b101 2
b101 `
b101 |
b111 5
b111 _
b111 {
b10 >
b10 T
b10 ]
b10 v
1W
b1011 8
b1011 V
1/
10
b110000000000000010 4
b110000000000000010 d
b110000000000000010 s
b110000000000000010 ""
b11000101010001110001011 :
b11000101010001110001011 f
b11000101010001110001011 y
b11000101010001110001011 )"
b11000101010001110001011 +"
b11000101010001110001011 0"
b1000 %
b1000 S
b100 $
b100 R
b1000 !
b1000 O
b1000 &
b1000 N
b100100 &"
b100000 @
b100000 $"
b100100 6
b100000 7
b100000 '"
b100000 ,"
b100000 /"
1'
#100000
0'
#105000
b0 .
b0 b
b0 ~
b0 o
b0 n
1-
b0 e
b0 j
1M
b0 p
b0 k
b0 m
b0 r
b0 l
b0 ,
b0 %"
b0 A
b0 [
b0 h
b0 t
0/
00
1?
b0 3
b0 Y
b0 c
b0 !"
b0 4
b0 d
b0 s
b0 ""
b10 i
b10 q
b10 x
0E
b0 K
b0 X
b0 \
b0 u
0D
b101000 ("
b101000 ."
b1 1
b1 a
b1 }
b0 2
b0 `
b0 |
b0 5
b0 _
b0 {
b0 >
b0 T
b0 ]
b0 v
0W
b1110011 8
b1110011 V
1<
b100000000000001110011 :
b100000000000001110011 f
b100000000000001110011 y
b100000000000001110011 )"
b100000000000001110011 +"
b100000000000001110011 0"
b1001 %
b1001 S
b101 $
b101 R
b1001 !
b1001 O
b1001 &
b1001 N
b101000 &"
b100100 @
b100100 $"
b101000 6
b100100 7
b100100 '"
b100100 ,"
b100100 /"
1'
#110000
0'
#115000
bx .
bx b
bx ~
bx o
bx n
bx e
bx j
bx p
bx k
bx m
bx r
bx l
bx0 ,
bx0 %"
x-
bx A
bx [
bx h
bx t
bx 3
bx Y
bx c
bx !"
x/
x0
x?
bx 4
bx d
bx s
bx ""
0M
xD
xC
xB
b101100 ("
b101100 ."
bx 1
bx a
bx }
bx 2
bx `
bx |
bx 5
bx _
bx {
bx =
bx U
bx ^
bx w
bx >
bx T
bx ]
bx v
xW
bx 8
bx V
x<
bx :
bx f
bx y
bx )"
bx +"
bx 0"
b101100 &"
b101000 @
b101000 $"
b101100 6
b101000 7
b101000 '"
b101000 ,"
b101000 /"
1'
#120000
0'
#125000
b110000 ("
b110000 ."
b110000 &"
b101100 @
b101100 $"
b110000 6
b101100 7
b101100 '"
b101100 ,"
b101100 /"
1'
#130000
0'
#135000
b110100 ("
b110100 ."
b110100 &"
b110000 @
b110000 $"
b110100 6
b110000 7
b110000 '"
b110000 ,"
b110000 /"
1'
#140000
0'
#145000
b111000 ("
b111000 ."
b111000 &"
b110100 @
b110100 $"
b111000 6
b110100 7
b110100 '"
b110100 ,"
b110100 /"
1'
#150000
0'
#155000
b111100 ("
b111100 ."
b111100 &"
b111000 @
b111000 $"
b111100 6
b111000 7
b111000 '"
b111000 ,"
b111000 /"
1'
#160000
0'
#165000
b1000000 ("
b1000000 ."
b1000000 &"
b111100 @
b111100 $"
b1000000 6
b111100 7
b111100 '"
b111100 ,"
b111100 /"
1'
#170000
0'
#175000
b1000100 ("
b1000100 ."
b1000100 &"
b1000000 @
b1000000 $"
b1000100 6
b1000000 7
b1000000 '"
b1000000 ,"
b1000000 /"
1'
#180000
0'
#185000
b1001000 ("
b1001000 ."
b1001000 &"
b1000100 @
b1000100 $"
b1001000 6
b1000100 7
b1000100 '"
b1000100 ,"
b1000100 /"
1'
#190000
0'
#195000
b1001100 ("
b1001100 ."
b1001100 &"
b1001000 @
b1001000 $"
b1001100 6
b1001000 7
b1001000 '"
b1001000 ,"
b1001000 /"
1'
#200000
0'
#205000
b1010000 ("
b1010000 ."
b1010000 &"
b1001100 @
b1001100 $"
b1010000 6
b1001100 7
b1001100 '"
b1001100 ,"
b1001100 /"
1'
#210000
0'
#215000
b1010100 ("
b1010100 ."
b1010100 &"
b1010000 @
b1010000 $"
b1010100 6
b1010000 7
b1010000 '"
b1010000 ,"
b1010000 /"
1'
#220000
0'
#225000
b1011000 ("
b1011000 ."
b1011000 &"
b1010100 @
b1010100 $"
b1011000 6
b1010100 7
b1010100 '"
b1010100 ,"
b1010100 /"
1'
#230000
0'
#235000
b1011100 ("
b1011100 ."
b1011100 &"
b1011000 @
b1011000 $"
b1011100 6
b1011000 7
b1011000 '"
b1011000 ,"
b1011000 /"
1'
#240000
0'
#245000
b1100000 ("
b1100000 ."
b1100000 &"
b1011100 @
b1011100 $"
b1100000 6
b1011100 7
b1011100 '"
b1011100 ,"
b1011100 /"
1'
#250000
0'
#255000
b1100100 ("
b1100100 ."
b1100100 &"
b1100000 @
b1100000 $"
b1100100 6
b1100000 7
b1100000 '"
b1100000 ,"
b1100000 /"
1'
#260000
0'
#265000
b1101000 ("
b1101000 ."
b1101000 &"
b1100100 @
b1100100 $"
b1101000 6
b1100100 7
b1100100 '"
b1100100 ,"
b1100100 /"
1'
#270000
0'
#275000
b1101100 ("
b1101100 ."
b1101100 &"
b1101000 @
b1101000 $"
b1101100 6
b1101000 7
b1101000 '"
b1101000 ,"
b1101000 /"
1'
#280000
0'
#285000
b1110000 ("
b1110000 ."
b1110000 &"
b1101100 @
b1101100 $"
b1110000 6
b1101100 7
b1101100 '"
b1101100 ,"
b1101100 /"
1'
#290000
0'
#295000
b1110100 ("
b1110100 ."
b1110100 &"
b1110000 @
b1110000 $"
b1110100 6
b1110000 7
b1110000 '"
b1110000 ,"
b1110000 /"
1'
#300000
0'
#305000
b1111000 ("
b1111000 ."
b1111000 &"
b1110100 @
b1110100 $"
b1111000 6
b1110100 7
b1110100 '"
b1110100 ,"
b1110100 /"
1'
#310000
0'
#315000
b1111100 ("
b1111100 ."
b1111100 &"
b1111000 @
b1111000 $"
b1111100 6
b1111000 7
b1111000 '"
b1111000 ,"
b1111000 /"
1'
#320000
0'
#325000
b10000000 ("
b10000000 ."
b10000000 &"
b1111100 @
b1111100 $"
b10000000 6
b1111100 7
b1111100 '"
b1111100 ,"
b1111100 /"
1'
#330000
0'
#335000
b10000100 ("
b10000100 ."
b10000100 &"
b10000000 @
b10000000 $"
b10000100 6
b10000000 7
b10000000 '"
b10000000 ,"
b10000000 /"
1'
#340000
0'
#345000
b10001000 ("
b10001000 ."
b10001000 &"
b10000100 @
b10000100 $"
b10001000 6
b10000100 7
b10000100 '"
b10000100 ,"
b10000100 /"
1'
#350000
0'
#355000
b10001100 ("
b10001100 ."
b10001100 &"
b10001000 @
b10001000 $"
b10001100 6
b10001000 7
b10001000 '"
b10001000 ,"
b10001000 /"
1'
#360000
0'
#365000
b10010000 ("
b10010000 ."
b10010000 &"
b10001100 @
b10001100 $"
b10010000 6
b10001100 7
b10001100 '"
b10001100 ,"
b10001100 /"
1'
#370000
0'
#375000
b10010100 ("
b10010100 ."
b10010100 &"
b10010000 @
b10010000 $"
b10010100 6
b10010000 7
b10010000 '"
b10010000 ,"
b10010000 /"
1'
#380000
0'
#385000
b10011000 ("
b10011000 ."
b10011000 &"
b10010100 @
b10010100 $"
b10011000 6
b10010100 7
b10010100 '"
b10010100 ,"
b10010100 /"
1'
#390000
0'
#395000
b10011100 ("
b10011100 ."
b10011100 &"
b10011000 @
b10011000 $"
b10011100 6
b10011000 7
b10011000 '"
b10011000 ,"
b10011000 /"
1'
#400000
0'
#405000
b10100000 ("
b10100000 ."
b10100000 &"
b10011100 @
b10011100 $"
b10100000 6
b10011100 7
b10011100 '"
b10011100 ,"
b10011100 /"
1'
#410000
0'
#415000
b10100100 ("
b10100100 ."
b10100100 &"
b10100000 @
b10100000 $"
b10100100 6
b10100000 7
b10100000 '"
b10100000 ,"
b10100000 /"
1'
#416000
